{"version":3,"sources":["App.tsx","goods.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","state","isReversed","sortBy","NONE","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","visibleGoods","sort","a","b","length","localeCompare","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,iGCbQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDNFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,UAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQT,EAASU,MAHrB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CACZH,OAAQT,EAASc,YAdvB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZH,OAAQT,EAASgB,UApBvB,EAwBEC,MAAQ,WACN,EAAKL,SAAS,CACZH,OAAQT,EAASU,KACjBF,YAAY,KA3BlB,4CA+BE,WACE,MAEIU,KAAKX,MADPC,EADF,EACEA,WAAYC,EADd,EACcA,OAERU,EAAY,UAAOd,GAkBzB,OAhBAc,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,IAAK,SACH,OAAOY,EAAEE,OAASD,EAAEC,OAEtB,IAAK,WACH,OAAOF,EAAEG,cAAcF,GAEzB,QAAS,OAAO,MAIhBd,GACFW,EAAaR,UAIb,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAuB,aAAXlB,IAEhBmB,QAASV,KAAKL,eANhB,iCAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAuB,WAAXlB,IAEhBmB,QAASV,KAAKH,aANhB,4BAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfnB,IAGhBoB,QAASV,KAAKP,QARhB,sBAaGH,GAAyB,OAAXC,IAEf,wBACEiB,KAAK,SACLD,UAAU,sCACVG,QAASV,KAAKD,MAHhB,sBASJ,cAAC,EAAD,CAAUf,MAAOiB,WAxGzB,GAAyBU,IAAMC,WE3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.340f0b3b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'id',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype State = {\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortBy: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const {\n      isReversed, sortBy,\n    } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'length':\n          return a.length - b.length;\n\n        case 'alphabet':\n          return a.localeCompare(b);\n\n        default: return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortBy !== 'alphabet' },\n            )}\n            onClick={this.sortByAlphabet}\n\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortBy !== 'length' },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { (isReversed || sortBy !== 'id')\n          && (\n            <button\n              type=\"button\"\n              className=\"button btn-reset is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <GoodList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}